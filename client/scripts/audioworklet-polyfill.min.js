/**
 * Skipped minification because the original files appears to be already minified.
 * Original file: /npm/@shamblesides/audioworklet-polyfill@1.1.4/dist/audioworklet-polyfill.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
!function(){function e(e,t){var r=document.createElement("iframe");r.style.cssText="position:absolute;left:0;top:-999px;width:1px;height:1px;",t.appendChild(r);var o=r.contentWindow,n=o.document,i="var window,$hook";for(var s in o)s in e||"eval"===s||(i+=",",i+=s);for(var a in e)i+=",",i+=a,i+="=self.",i+=a;var u=n.createElement("script");u.appendChild(n.createTextNode('function $hook(self,console) {"use strict";\n        '+i+";return function() {return eval(arguments[0])}}")),n.body.appendChild(u),this.exec=o.$hook.call(e,e,console)}var t,r=[];function o(e){var t=this,o={},i=-1;this.parameters.forEach(function(e,n){var s=r[++i]||(r[i]=new Float32Array(t.bufferSize));s.fill(e.value),o[n]=s}),this.processor.realm.exec("self.sampleRate=sampleRate="+this.context.sampleRate+";self.currentTime=currentTime="+this.context.currentTime);var s=n(e.inputBuffer),a=n(e.outputBuffer);this.instance.process([s],[a],o)}function n(e){for(var t=[],r=0;r<e.numberOfChannels;r++)t[r]=e.getChannelData(r);return t}function i(e){return e.$$processors||(e.$$processors={})}"function"==typeof AudioWorkletNode&&"audioWorklet"in AudioContext.prototype||(self.AudioWorkletNode=function(e,r,n){var s=i(e)[r],a=e.createScriptProcessor(2048,2,n&&n.outputChannelCount?n.outputChannelCount[0]:2);if(a.parameters=new Map,s.properties)for(var u=0;u<s.properties.length;u++){var c=s.properties[u],l=e.createGain().gain;l.value=c.defaultValue,a.parameters.set(c.name,l)}var p=new MessageChannel;t=p.port2;var f=new s.Processor(n||{});return t=null,a.port=p.port1,a.processor=s,a.instance=f,a.onaudioprocess=o,a},Object.defineProperty((self.AudioContext||self.webkitAudioContext).prototype,"audioWorklet",{get:function(){return this.$$audioWorklet||(this.$$audioWorklet=new self.AudioWorklet(this))}}),self.AudioWorklet=function(){function r(e){this.$$context=e}return r.prototype.addModule=function(r,o){var n=this;return new Promise(function(e,t){var o=new XMLHttpRequest;o.onload=function(){e(o.responseText)},o.onerror=function(){t(new Error("AudioWorklet shim: failed to load script. status code "+o.status))},o.onabort=function(){t(new Error("AudioWorklet shim: failed to load script. network error"))},o.open("GET",r),o.send()}).then(function(r){var s={sampleRate:n.$$context.sampleRate,currentTime:n.$$context.currentTime,AudioWorkletProcessor:function(){this.port=t},registerProcessor:function(e,t){i(n.$$context)[e]={realm:a,context:s,Processor:t,properties:t.parameterDescriptors||[]}}};s.self=s;var a=new e(s,document.documentElement);return a.exec((o&&o.transpile||String)(r)),null})},r}())}();
//# sourceMappingURL=audioworklet-polyfill.js.map
